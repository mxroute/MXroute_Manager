define(["lodash","angular","cjt/util/locale","app/services/statisticsService","cjt/directives/spinnerDirective","cjt/decorators/growlDecorator","cjt/decorators/growlAPIReporter"],function(_,angular,LOCALE){"use strict";var USE_BYTES={format_bytes:true,format_bytes_per_second:true};function _massageStatsDataForDisplay(data){for(var i=0;i<data.length;i++){var item=data[i];var isBytes=!!USE_BYTES[item.formatter];var formattedUsage=isBytes?LOCALE.format_bytes(item.usage):LOCALE.numf(item.usage);var formattedMax=null;if(item.formatter==="format_bytes_per_second"){formattedUsage+="/s";if(item.isLimited){formattedMax=LOCALE.format_bytes(item.maximum)+"/s"}}else{formattedMax=!item.isLimited?"âˆž":isBytes?LOCALE.format_bytes(item.maximum):LOCALE.numf(item.maximum)}_.assign(item,{showPercent:!!(item.isLimited&&item.maximum),formattedPercent:LOCALE.numf(item.percent),formattedMaximum:formattedMax,formattedUsage:formattedUsage})}return data}var app=angular.module("App");var controller=app.controller("statisticsController",["$scope","spinnerAPI","statisticsService","growl","$timeout",function($scope,spinnerAPI,statisticsService,growl,$timeout){spinnerAPI.start("loadingStatsSpinner");$timeout(function(){statisticsService.fetchExtendedStats().then(function(response){$scope.statistics=_massageStatsDataForDisplay(response)}).finally(function(){spinnerAPI.stop("loadingStatsSpinner")})});$scope.appUpgradeUrl=PAGE.appUpgradeUrl&&(PAGE.dprefix||"")+PAGE.appUpgradeUrl;$scope.getStatStatus=function(percentage){if(percentage>=80){return"danger"}if(percentage>=60){return"warning"}if(percentage>=40){return"info"}if(percentage>=0){return"success"}}}]);return controller});