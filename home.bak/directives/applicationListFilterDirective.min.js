define(["angular"],function(angular){var app;try{app=angular.module("App")}catch(e){app=angular.module("App",[])}app.directive("applicationListFilter",[function(){return{restrict:"A",scope:{collapsedGroups:"=",searchText:"="},link:function(scope,element){var boxesContainer=element;var groups=angular.element(boxesContainer.find("[data-group-name]"));var collapseIndicators=angular.element(boxesContainer.find("[data-collapsed-indicator]"));var items=angular.element(boxesContainer.find("[data-item-search-text]"));var groupBodies=angular.element(boxesContainer.find("[data-group-body]"));function expandAllGroups(){collapseIndicators.addClass("ng-hide");groupBodies.removeClass("minimized ng-hide")}function setGroupState(){items.removeClass("ng-hide");collapseIndicators.removeClass("ng-hide");groups.removeClass("ng-hide");var collapsedGroups=scope.collapsedGroups;groupBodies.each(function(){var groupBody=angular.element(this);if(collapsedGroups.indexOf(groupBody.data("groupBody")+"=0")===-1){groupBody.removeClass("ng-hide")}else{groupBody.addClass("minimized ng-hide")}})}function filterBy(value){var regex=new RegExp(value,"i");var visibleGroups=[];items.each(function(){var item=angular.element(this);if(!regex.test(item.data("itemSearchText"))){item.addClass("ng-hide")}else{var groupName=item.data("itemGroup");if(visibleGroups.indexOf(groupName)===-1){visibleGroups.push(groupName)}item.removeClass("ng-hide")}});groups.each(function(){var group=angular.element(this);if(visibleGroups.indexOf(group.data("groupName"))===-1){group.addClass("ng-hide")}else{group.removeClass("ng-hide")}})}scope.$watch("searchText",function(newVal,oldVal){if(typeof oldVal==="undefined"||oldVal===""&&newVal!==""){expandAllGroups();filterBy(newVal)}else if(newVal===""){setGroupState()}else{filterBy(newVal)}},true)}}}])});