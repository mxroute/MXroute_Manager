define(["angular","lodash","cjt/util/locale","uiBootstrap","cjt/directives/disableAnimations","cjt/directives/lastItem","cjt/directives/pageSizeDirective","cjt/directives/spinnerDirective","app/directives/listSearchArea","app/directives/listInstance","app/services/instancesApi"],function(angular,_,LOCALE){var app=angular.module("cpanel.wordpress");var controller=app.controller("listController",["$scope","$timeout","$location","growl","instancesApi","spinnerAPI",function($scope,$timeout,$location,growl,instancesApi,spinnerAPI){var _initializeScope=function(){spinnerAPI.start("top-loading-spinner");var allowedPageSizes=[10,20,50,100];var pageSize=_closestValidPageSize(allowedPageSizes,$location.search().page_size)||20;$scope.list={original:undefined,filtered:undefined,invalidCount:0,nonFatalErrors:[],needsFiltering:false,needsPagination:false,meta:{allowedSizes:allowedPageSizes},initialMeta:{pageNumber:$location.search().page_number||1,pageSize:pageSize,filterValue:$location.search().filter_value}};$scope.ui={isRefreshing:true,fetchHasFailed:false};instancesApi.get().then(function(data){$scope.list.original=data.instances;$scope.list.invalidCount=data.invalidCount;$scope.list.nonFatalErrors=data.nonFatalErrors}).catch(function(error){_fetchError(error)})};_initializeScope();function _closestValidPageSize(allowedPageSizes,targetSize){targetSize=parseInt(targetSize,10);if(isNaN(targetSize)){return}var index=_.sortedIndex(allowedPageSizes,targetSize);if(index>=allowedPageSizes.length){index=allowedPageSizes.length-1}return allowedPageSizes[index]}$scope.selectInstance=function(instance){$scope.loadView("/manage/"+window.encodeURIComponent(instance.id))};function _saveSearchQuery(){if($scope.list.initialMeta){return}$location.search({page_number:$scope.list.meta.pageNumber||null,filter_value:$scope.list.meta.filterValue||null,page_size:$scope.list.meta.pageSize||null})}$scope.filterInstances=function(){$scope.list.needsFiltering=true;$scope.list.needsPagination=true};$scope.refreshInstances=function(){spinnerAPI.start("top-loading-spinner");$scope.ui.isRefreshing=true;$scope.ui.fetchHasFailed=false;instancesApi.fetch().then(function(data){$scope.list.original=data.instances;$scope.list.invalidCount=data.invalidCount;$scope.list.nonFatalErrors=data.nonFatalErrors}).catch(function(error){_fetchError(error)}).finally(function(){$scope.ui.isRefreshing=false})};function _fetchError(error){if(error){growl.error(error)}else{growl.error(LOCALE.maketext("The system failed to retrieve the list of your [asis,WordPress] installations from the server."))}$scope.doneRendering();$scope.ui.fetchHasFailed=true}function _paginateAndFilter(needsFiltering){if(!$scope.list.original){return}spinnerAPI.start("top-loading-spinner");$timeout(function(){var filteredList=needsFiltering?_filterInstances():$scope.list.filtered||_filterInstances();if(!filteredList){return}var oldPagedList=$scope.list.paged;var newPagedList=_getCurrentPage(filteredList,$scope.list.meta);$scope.list.filtered=filteredList;$scope.list.paged=newPagedList;if(_listIsUnchanged(oldPagedList,newPagedList)||!newPagedList.length){$timeout(function(){$scope.doneRendering()})}$scope.hideViewLoadingPanel();$scope.ui.isRefreshing=false})}function _getCurrentPage(source,options){var startIndex=options.pageSize*(options.pageNumber-1);var endIndex=options.pageSize*options.pageNumber;if(endIndex>source.length){endIndex=source.length}return source.length<options.pageSize?source.slice():source.slice(startIndex,endIndex)}function _listIsUnchanged(oldList,newList){if(!oldList||!newList||oldList.length!==newList.length){return false}return oldList.every(function(oldInstance,index){var newInstance=newList[index];return newInstance===oldInstance||_.isEqual(newInstance,oldInstance)})}function _filterInstances(){if(!$scope.list.original){return}if($scope.list.initialMeta){angular.forEach($scope.list.initialMeta,function(val,key){$scope.list.meta[key]=val});delete $scope.list.initialMeta}var filteredList=$scope.list.original;filteredList=filteredList.filter(_filterByValue);return filteredList}function _filterByValue(instance){if(!$scope.list.meta.filterValue){return true}return["domain","full_path"].some(function(key){var propVal=instance[key];if(propVal&&propVal.toLocaleLowerCase().indexOf($scope.list.meta.filterValue)!==-1){return true}return false})}$scope.triggerClearSearch=function(event){if(event.keyCode===27){$scope.clearSearch()}};$scope.clearSearch=function(){$scope.list.meta.filterValue="";$scope.filterInstances()};$scope.doneRendering=function(user){spinnerAPI.stop("top-loading-spinner");$scope.hideViewLoadingPanel();$scope.ui.isRefreshing=false};$scope.$watchGroup(["list.meta.pageSize","list.meta.pageNumber"],function(newVals){if(angular.isUndefined(newVals[0])||$scope.list.initialMeta){return}$scope.scrollTo("top");_saveSearchQuery();$scope.list.needsPagination=true});$scope.$watch("list.meta.filterValue",function(newVal,oldVal){if(newVal!==oldVal){_saveSearchQuery();$scope.list.needsFiltering=true}});$scope.$watchGroup(["list.needsFiltering","list.needsPagination"],function(needs){var needsFiltering=needs[0];var needsPagination=needs[1];if(needsPagination||needsFiltering){_paginateAndFilter(needsFiltering);$scope.list.needsFiltering=false;$scope.list.needsPagination=false}});$scope.$watch("list.original",function(newVal,oldVal){if(!newVal){return}$scope.filterInstances();if($scope.list.invalidCount){growl.warning(LOCALE.maketext("[_1] [asis,WordPress] [numerate,_1,installation is,installations are] not included due to data errors.",$scope.list.invalidCount))}$scope.list.nonFatalErrors.forEach(function(error){growl.warning(LOCALE.maketext("The system could not display some of your [asis,WordPress] installations due to loading errors: [_1]",error))})})}]);return controller});