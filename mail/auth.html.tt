[% SET CPANEL.CPVAR.dprefix="../"  %]


[% SET has_feature = CPANEL.feature('emailauth') %]

[% IF has_feature;
    Api2.pre_exec("SPFUI", "installed");
    SET api2_result_SPFUI_installed = Api2.exec("SPFUI" , "installed" , {});
    Api2.post_exec("SPFUI", "installed");

    Api2.pre_exec("DKIMUI", "installed");
    SET api2_result_DKIMUI_installed = Api2.exec("DKIMUI" , "installed" , {});
    Api2.post_exec("DKIMUI", "installed");

    Api2.pre_exec("SPFUI", "load_current_values");
    SET api2_result_SPFUI_load_current_values = Api2.exec("SPFUI" , "load_current_values" , {});
    Api2.post_exec("SPFUI", "load_current_values");

    Api2.pre_exec("SPFUI", "available");
    SET SPFUI_available = Api2.exec("SPFUI" , "available" , {});
    Api2.post_exec("SPFUI", "available");

    IF SPFUI_available.size;
        SET has_spf = SPFUI_available.0.available.html();
    END;

    Api2.pre_exec("DKIMUI", "available");
    SET DKIMUI_available = Api2.exec("DKIMUI" , "available" , {});
    Api2.post_exec("DKIMUI", "available");

    IF DKIMUI_available.size;
        SET has_dkim = DKIMUI_available.0.available.html();
    END;

    IF has_dkim == "1";
        SET dkim_style = "display:block";
    ELSE;
        SET dkim_style = "display:none";
    END;

    IF has_spf == "1";
        SET spf_style = "display:block";
    ELSE;
        SET spf_style = "display:none";
    END;

END; %]

[% js_code = PROCESS js_block %]
[% WRAPPER '_assets/master.html.tt'
    app_key = 'authentication'
    page_js = js_code
%]

<div class="body-content">
    [% IF has_feature %]
        <p class="description" id="descAuthentication">
            [% locale.maketext("First, let me stress that you can most likely live without DKIM and save yourself the frustration of dealing with this. We use MailChannels for outbound email. DKIM provides extremely small benefit to inbox delivery reputation. It's only true benefit is to show that emails are actually from you and not spoofed, by using the signature. Now, raise your hand if you can think of a top mail provider that always rejects DKIM failures or a list of recipients that actually check if emails are signed. Crickets chirping? Exactly. The entire standard is pointless, it's only role required that people actually enforce the standard, and that ship has sailed.")  %]
        </p>
        <p>
            <h3>[% locale.maketext("If you do want to press forward, here is the tutorial. Do not rush this. You will miss a detail. Even if you think you didn't, experience tells us that you are likely to open a support ticket asking why this process did not work. While we accept that our implementations are not flawless, it is highly likely that we will simply ask you to start over with the tutorial. It is very difficult to eyeball user errors/typos, which account for 100% of the tickets we receive. All this does for you is provide a false sense of security and a false rumor that it significantly improves email delivery. If that is worth it to you, proceed.")  %]</h3>
        </p>
        <br>
        <p>
        <h3><a href="dkimtutorial.html">Click here for the tutorial.</a></h3>
        </p>
        <p>&nbsp;</p>
        <div id="cjt_pagenotice_container"></div>

        [% IF (CPANEL.CPVAR.dkim_keys_installed == "1" && CPANEL.CPVAR.mta_dkim_active == "0") ||
            (CPANEL.CPVAR.spf_installed == "1" && CPANEL.CPVAR.spf_active == "0") %]
        <div class="alert alert-warning" id="auth_ns_warning">
            <span class="glyphicon glyphicon-exclamation-sign"></span>
            <div class="alert-message">
            [% locale.maketext("") %]
            </div>
        </div>
        [% END %]

        <div style="[% dkim_style %]" id='dkim' class="section">

            <strong>[% locale.maketext("DKIM Status:") %] </strong>
            [% IF (CPANEL.CPVAR.dkim_keys_installed == "1" && CPANEL.CPVAR.mta_dkim_active == "1") %]
                <span class="text-success">
                    <span id="dkimStatus">[% locale.maketext("Enabled") %]</span>
                    <span id="dkimStatusDns">[% locale.maketext("Active ([asis,DNS] Check Passed)") %]</span>
                </span>
            [% ELSIF (CPANEL.CPVAR.dkim_keys_installed == "1" && CPANEL.CPVAR.mta_dkim_active == "0") %]
                <span id="dkimStatus">[% locale.maketext("Enabled") %]</span>
                <div class="alert alert-warning" id="dkimStatusDns">
                    <span class="glyphicon glyphicon-exclamation-sign"></span>
                    <div class="alert-message">
                    [% locale.maketext("Warning: cPanel is unable to verify that this server is an authoritative nameserver for “[_1]”.",CPANEL.CPDATA.DNS.html) %]
                    </div>
                </div>
            [% ELSIF (CPANEL.CPVAR.dkim_keys_installed == "0") %]
                <span class="text-muted" id="dkimStatus">[% locale.maketext("Disabled") %]</span>
            [% END %]

            <form action="set_dkim.html">
                <div class="form-group">
                    [% IF (CPANEL.CPVAR.dkim_keys_installed == "1") %]
                        <input type="hidden" name="faction" value="uninstall" id="hidFactionDKIM"/>
                        <input class="btn btn-primary" type="submit" value="[% locale.maketext("Disable") %]" id="btnDisableDKIM"/>
                    [% ELSIF (CPANEL.CPVAR.dkim_keys_installed == "0") %]
                        <input type="hidden" name="faction" value="install" id="hidFactionDKIM"/>
                        <input class="btn btn-primary" type="submit" value="[% locale.maketext("Enable") %]" id="btnEnableDKIM"/>
                    [% END %]
                </div>
            </form>

The information below is for debugging, and is a work in progress. This information will be useful to some of our customers, but is not ready to be used as a replacement for the tutorial linked above.

            [% IF (CPANEL.CPVAR.dkim_keys_installed == "1" && CPANEL.CPVAR.mta_dkim_active == "0") %]
                [% locale.maketext("Your current raw DKIM record is:")  %]
                <pre>[%
                Api2.pre_exec("DKIMUI", "getrecords");
                api2_result_DKIMUI_getrecords=Api2.exec("DKIMUI" , "getrecords" , {"limit" =>"1" });
                Api2.post_exec("DKIMUI", "getrecords");
                IF api2_result_DKIMUI_getrecords.size;
                    FOREACH hashref IN api2_result_DKIMUI_getrecords;
                        hashref.record.html();
                    END;
                END %]</pre>
            [% END %]
        </div>
    [% END %]

               	[% locale.maketext("Your current raw DKIM records are:")  %]
               	<pre>[%
                Api2.pre_exec("DKIMUI", "getrecords");
               	api2_result_DKIMUI_getrecords=Api2.exec("DKIMUI" , "getrecords");
               	Api2.post_exec("DKIMUI", "getrecords");
               	IF api2_result_DKIMUI_getrecords.size;
                    FOREACH hashref IN api2_result_DKIMUI_getrecords; %]
       	       	       	<pre>[% hashref.record.html(); %]</pre>[%
                    END;
               	END %]</pre>

</div>
[% END %]

[% BLOCK js_block %]
<script type="text/javascript">
    var has_spf = [% has_spf %];
    var has_dkim = [% has_dkim %];
    function preSubmit() {
        selectEls(true);
    }
    function unsel() {
        selectEls(false);
    }
    function selectEls(opt) {
        var selectEls = document.getElementsByTagName('select');
        for(var j=0;j<selectEls.length;j++) {
            var thisEl = selectEls[j];
            for (var i=0;i<thisEl.options.length;i++) {
                thisEl.options[i].selected=opt;
            }
        }
    }
    function checkvaliddomain (key) {
        /* if it fails the check return a reason message otherwise return nothing */
        if (! key.match(/^[\w\.\-]+$/)) {
            return '[% locale.maketext("Invalid Host Specified!") %]';
        }
        return;
    }

    function checkvalidipcidr (key) {
        /* if it fails the check return a reason message otherwise return nothing */
        if (! key.match(/^\d+\.\d+\.\d+\.\d+\/?\d*$|^[0-9a-f:]+\/?\d*$/)) {
            return '[% locale.maketext("Invalid IP/CIDR Block Specified!") %]';
        }
        return;
    }

    [% # The prompt fields shouldn't have HTML embedded in them.
       SET old_context = locale.set_context_plain()
    %]
    var entrytypes = {
        'a': '[% locale.maketext("Host in the following format: [asis,domain.com]")  %]',
        'mx': '[% locale.maketext("Host in the following format: [asis,domain.com]")  %]',
        'include': '[% locale.maketext("Host in the following format: [asis,domain.com]")  %]',
        'ip': '[% locale.maketext("[output,acronym,IP,Internet Protocol] [output,acronym,CIDR,Classless Inter-Domain Routing] Block in the following formats: [asis,192.168.0.1], [asis,127.0.0.1/32], and [asis,2001:db8:1a34:56cf::/64]")  %]'
    };
    [% locale.set_context(old_context) %]

    function add_opt(selectId,entrytype,syntaxchecker) {
        var selectEl = document.getElementById(selectId);
        var name = prompt('[% locale.maketext("Enter a new item:")  %]',entrytypes[entrytype]);

        if (name) {
            var message = syntaxchecker(name);

            if (message) {
                alert(message);
            }
            else {
                var icount = selectEl.options.length;
                selectEl.options[icount] = new Option(name,name);
                selectEl.setAttribute('size',parseInt(selectEl.getAttribute('size'))+1);
            }
        }
    }
    function remove_opt(selectId,entrytype,syntaxchecker) {
        var selectEl = document.getElementById(selectId);
        var i;
        var size = parseInt(selectEl.getAttribute('size'));
        for(i=selectEl.options.length-1;i>=0;i--)
        {
            if(selectEl.options[i].selected) {
                selectEl.remove(i);
                size--;
            }
        }
        selectEl.setAttribute('size',size);
    }
    function initemailauth() {
        var updateButtonEl = document.getElementById('update_button');

        if ( updateButtonEl ) {
            document.getElementById('update_button_sub_ct').style.display='none';
            document.getElementById('update_button_btn_ct').style.display='';
        }

        unsel();
    }

    YAHOO.util.Event.onDOMReady(initemailauth);

    if (!has_spf && !has_dkim) {
        document.getElementById('noauth').style.display='';
    }
</script>
[% END %]
