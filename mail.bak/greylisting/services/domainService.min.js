define(["angular","lodash","cjt/util/locale","cjt/io/api","cjt/io/uapi-request","cjt/io/uapi","cjt/services/APIService"],function(angular,_,LOCALE,API,APIREQUEST,APIDRIVER){var app=angular.module("App");app.factory("DomainService",["$q","APIService",function($q,APIService){function convertResponseToList(response){var items=[];if(response.data){var data=response.data;for(var i=0,length=data.length;i<length;i++){items.push(data[i])}var meta=response.meta;var totalItems=meta.paginate.total_records||data.length;var totalPages=meta.paginate.total_pages||1;var totalEnabled=0,totalDisabled=0;if(meta.hasOwnProperty("cPGreyList")){totalEnabled=meta.cPGreyList.total_enabled;totalDisabled=meta.cPGreyList.total_disabled}else{var enabledItems=_.filter(data,function(item){return!!item.enabled});totalEnabled=enabledItems?enabledItems.length:0;totalDisabled=data.length-totalEnabled}return{items:items,totalItems:totalItems,totalPages:totalPages,totalEnabled:totalEnabled,totalDisabled:totalDisabled}}else{return{items:[],totalItems:0,totalPages:0,totalEnabled:0,totalDisabled:0}}}function toggleDomains(method,domains){var apiCall=new APIREQUEST.Class;apiCall.initialize("cPGreyList",method,{domains:domains});var deferred=this.deferred(apiCall,{done:function(response,deferred){response=response.parsedResponse;var results=convertResponseToList(response);if(response.status){deferred.resolve(results)}else{deferred.reject({items:results.items,error:response.error})}}});return deferred.promise}function toggleAllDomains(method){var apiCall=new APIREQUEST.Class;apiCall.initialize("cPGreyList",method);var deferred=this.deferred(apiCall,{done:function(response,deferred){response=response.parsedResponse;var results=convertResponseToList(response);if(response.status){deferred.resolve(results)}else{results.error=response.error;deferred.reject(results)}}});return deferred.promise}var DomainsService=function(){};DomainsService.prototype=new APIService;angular.extend(DomainsService.prototype,{fetchList:function(meta){var apiCall=new APIREQUEST.Class;apiCall.initialize("cPGreyList","list_domains");if(meta){if(meta.sortBy&&meta.sortDirection){apiCall.addSorting(meta.sortBy,meta.sortDirection,meta.sortType)}if(meta.pageNumber){apiCall.addPaging(meta.pageNumber,meta.pageSize||10)}if(meta.filterBy&&meta.filterCompare&&meta.filterValue){apiCall.addFilter(meta.filterBy,meta.filterCompare,meta.filterValue)}}var deferred=this.deferred(apiCall,{transformAPISuccess:convertResponseToList});return deferred.promise},prepareList:function(response){return convertResponseToList(response)},enableDomains:function(domains){return toggleDomains.call(this,"enable_domains",domains)},enableAllDomains:function(){return toggleAllDomains.call(this,"enable_all_domains")},disableDomains:function(domains){return toggleDomains.call(this,"disable_domains",domains)},disableAllDomains:function(){return toggleAllDomains.call(this,"disable_all_domains")}});return new DomainsService}])});