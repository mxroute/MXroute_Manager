<div class="alert alert-danger" ng-show="!hasFeature">
    <span class="glyphicon glyphicon-exclamation-sign"></span>
    <div class="alert-message" id="modsecNoFeature">
        <strong>[% locale.maketext('Error:') %]</strong> [% locale.maketext('[asis,ModSecurity™] is not enabled for your account.') %]
    </div>
</div>
<div class="alert alert-info" ng-show="hasFeature && !isInstalled">
    <span class="glyphicon glyphicon-info-sign"></span>
    <div class="alert-message" id="modsecDisabledInfo">
        <strong>[% locale.maketext('Info:') %]</strong> [% locale.maketext('[asis,ModSecurity™] is not enabled on your server.') %]
    </div>
</div>
<div ng-show="isInstalled && hasFeature">
    <cp-alert-list></cp-alert-list>

    <div class="section">
    <h2>[% locale.maketext('Configure All Domains') %]</h2>
    <div class="callout callout-info bulk-changes" ng-hide="openConfirmation === 'disableAll'">
        <div class="notice-disable" ng-show="totalEnabled > 0 && totalDisabled == 0">
            [% locale.maketext('[asis,ModSecurity] is enabled for all of your domains.') %]
            [% locale.maketext('You can [output,url,_1,Disable,_2] [asis,ModSecurity] for your domains.',
                "javascript:void(0);",
                { 'id' => 'btnDisableAll', 'class' => 'btn btn-default', 'ng-click' => 'confirm(\'disableAll\')'}
            ) %]
        </div>
        <div class="notice-disable" ng-show="totalDisabled > 0 && totalEnabled == 0">
            [% locale.maketext('[asis,ModSecurity] is disabled for all of your domains.') %]
            [% locale.maketext('You can [output,url,_1,Enable,_2] [asis,ModSecurity] for your domains.',
                'javascript:void(0);',
                { 'id' => 'btnEnableAll', 'class' => 'btn btn-default', 'ng-click' => 'enableAllDomains($event)' }
            ) %]
        </div>
        <div class="notice-disable" ng-show="totalEnabled > 0 && totalDisabled > 0">
            [% locale.maketext('[asis,ModSecurity] is enabled for some domains.') %]
            [% locale.maketext('You can [output,url,_1,Enable,_2] [asis,ModSecurity] for all your domains, or [output,url,_1,Disable,_3] [asis,ModSecurity] for all your domains.',
                'javascript:void(0);',
                { 'id' => 'btnEnableAll',  'class' => 'btn btn-default', 'ng-click' => 'enableAllDomains($event)' },
                { 'id' => 'btnDisableAll', 'class' => 'btn btn-default', 'ng-click' => 'confirm(\'disableAll\')'},
            ) %]
        </div>
    </div>
    <div class="callout callout-warning callout-disable-all" ng-show="openConfirmation === 'disableAll'">
        <span>[% locale.maketext('Only disable [asis,ModSecurity] while you troubleshoot a problem with your configuration. Without [asis,ModSecurity] enabled, your domains lose the extra layer of protection that the module provides. Do you wish to proceed?') %]</span>
        <div>
            <button id="btnConfirmDisableAll" class="btn btn-default" ng-click="disableAllDomains($event)">[% locale.maketext('Disable All') %]</button>
            <button id="btnCancelDisableAll" class="btn btn-default" ng-click="confirm()">[% locale.maketext('Cancel') %]</button>
        </div>
    </div>
</div>

<div class="section">
    <h2>[% locale.maketext('Configure Individual Domains') %]</h2>
    <cp-alert ng-show="hasDisabledDomains()" type="warning" id="hasDisabledDomainsWarning">
        [% locale.maketext('[asis,ModSecurity] is disabled for one or more of your domains. Only disable [asis,ModSecurity] while you troubleshoot a problem with your configuration. Without [asis,ModSecurity] enabled, your domains lose the extra layer of protection that the module provides.') %]
    </cp-alert>
    <div class="row">
        <div class="col-xs-12 col-sm-5 col-md-6">
            <div class="form-group">
                <div class="row">
                    <div class="col-xs-10">
                        <div class="input-group filter-controls">
                            <input  id="domainListFilter"
                                    class="form-control"
                                    placeholder="[% locale.maketext('Search') %]"
                                    title="[% locale.maketext('Type in your search filter.') %]"
                                    ng-model="meta.filterValue"
                                    ng-keyup="triggerToggleSearch($event)"
                                    autocomplete="off"
                                    auto-focus>
                            <span class="input-group-btn">
                                <button id="btnSearch"
                                        type="button"
                                        class="btn btn-default"
                                        ng-click="toggleSearch(true)">
                                    <span class="glyphicon" ng-class="{ 'glyphicon-search': !activeSearch, 'glyphicon-remove': activeSearch }"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-xs-2">
                        <span spinner id="loadingSpinner" class="headerSpinner" title="[% locale.maketext('Loading …') %]"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-12 col-sm-7 col-md-6 text-right form-inline">
            <div id="containerPageSize" class="form-group">
                <label for="ddlPageSize">[% locale.maketext('Showing:') %]
                    <select id="ddlPageSize"
                            class="form-control"
                            ng-model="meta.pageSize"
                            ng-options="size for size in meta.pageSizes">
                    </select>
                </label>
            </div>
            <div id="topPager"
                 uib-pagination
                 ng-change="selectPage()"
                 ng-model="meta.pageNumber"
                 items-per-page="meta.pageSize"
                 total-items="totalItems"
                 max-size="5"
                 direction-links="false"
                 boundary-links="true"
                 first-text="[% locale.maketext('First') %]"
                 last-text="[% locale.maketext('Last') %]"
                 class="pagination-small">
            </div>
        </div>
    </div>
    <table class="table table-striped table-condensed">
        <thead>
            <tr>
                <th class="modsec-domain" ng-class="{'col-xs-10': !hasIssues, 'col-xs-6': hasIssues}">
                    <toggle-sort id="sortDomain"
                                 onsort="sortList"
                                 sort-meta="meta"
                                 sort-field="domain">
                        [% locale.maketext('Domains') %]
                    </toggle-sort>
                </th>
                <th class="col-xs-2 modsec-enabled text-center">
                    <toggle-sort id="sortEnabled"
                                 onsort="sortList"
                                 sort-meta="meta"
                                 sort-field="enabled">
                        [% locale.maketext('Status') %]
                    </toggle-sort>
                </th>
                <th class="col-xs-4 modsec-issues" ng-show="hasIssues">
                    [% locale.maketext('Issues') %]
                </th>
            </tr>
        </thead>
        <tbody>
            <tr ng-repeat-start="domain in domainList">
                <td class="modsec-domain" id="domainData{{$index}}">
                    <span ng-bind-html="domain.domain | wrap: '[-._]'"></span>
                    <a  id="lnkShowRelatedDomains"
                        href="#"
                        title="[% locale.maketext('Show Related Domains') %]"
                        ng-show="domain.dependencies.length > 0"
                        ng-click="toggleRow($event, $index)">
                        <span class="badge">{{domain.dependencies.length}}</span>
                    </a>
                </td>
                <td class="modsec-enabled text-center" id="enabledData{{$index}}">
                    <div class="btn-group btn-group-nowrap">
                        <label  id="btnDomainEnable{{$index}}"
                                class="btn"
                                ng-model="domain.enabled"
                                uib-btn-radio="1"
                                ng-class="{ 'btn-primary': domain.enabled, 'btn-default btn-none': !domain.enabled }"
                                ng-change="setDomain(domain)">[% locale.maketext('On') %]</label>
                        <label  id="btnDomainDisable{{$index}}"
                                class="btn btn-default"
                                ng-model="domain.enabled"
                                uib-btn-radio="0"
                                ng-class="{ 'btn-none': domain.enabled }"
                                ng-change="setDomain(domain)">[% locale.maketext('Off') %]</label>
                    </div>
                </td>
                <td class="modsec-issues" ng-show="hasIssues">
                    <ul class="validation-container" ng-show="hasIssue(domain)">
                        <li validation-item>
                            <div ng-bind-html="domain.exception | break | wrap : '[.]'"></div>
                        </li>
                    </ul>
                </td>
            </tr>
            <tr ng-repeat-end class="active" ng-if="$index === selectedRow">
                <td colspan="{{{true: 3, false: 2}[hasIssues]}}" class="domain-dependency" id="domainDependencies{{$index}}">
                    <span class="label label-primary">[% locale.maketext('Related Domains') %]</span>
                    <span id="domainDependencies{{$index}}" ng-repeat="dependency in domain.dependencies">
                        <span  ng-bind-html="dependency | wrap:'[.?=]':20"></span>
                    </span>
                </td>
            </tr>
            <tr class="info emptyrow" ng-hide="domainList.length">
                <td colspan="{{{true: 3, false: 2}[hasIssues]}}" id="noRecords">
                    [% locale.maketext('[output,strong,0] domains have been found.') %]
                </td>
            </tr>
        </tbody>
    </table>
</div>
</div>
