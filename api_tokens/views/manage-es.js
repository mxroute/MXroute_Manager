//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/paper_lantern/api_tokens/views/manage.js
// Generated: /usr/local/cpanel/base/frontend/paper_lantern/api_tokens/views/manage-es.js
// Module:    /paper_lantern/api_tokens/views/manage-es
// Locale:    es
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Manage [asis,API] Token":"Manage [asis,API] Token","The [asis,API] Token “[_1]” is now limited to the following features: [list_and_quoted,_2].":"The [asis,API] Token “[_1]” is now limited to the following features: [list_and_quoted,_2].","You have successfully renamed the API Token “[_1]” to “[_2]”.":"You have successfully renamed the API Token “[_1]” to “[_2]”.","You have successfully revoked the following [asis,API] [numerate,_1,token,tokens]: “[_1]”":"You have successfully revoked the following [asis,API] [numerate,_1,token,tokens]: “[_1]”","You have successfully set the [asis,API] token “[_1]” to unrestricted.":"You have successfully set the [asis,API] token “[_1]” to unrestricted."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
