define(["angular","lodash","cjt/util/locale","app/services/apiTokens","cjt/directives/copyField","app/validators/uniqueTokenName","cjt/modules","cjt/directives/actionButtonDirective","cjt/services/cpanel/componentSettingSaverService","cjt/directives/validationContainerDirective","cjt/directives/validationItemDirective","cjt/directives/toggleSwitchDirective","cjt/directives/searchDirective","cjt/directives/indeterminateState","cjt/services/alertService"],function(angular,_,LOCALE,APITokensService,CopyFieldDirective){"use strict";var CSSS_COMPONENT_NAME="createAPITokenView";var VIEW_TITLE=LOCALE.maketext("Create API Token");var MODULE_NAMESPACE="cpanel.apiTokens.views.create";var TEMPLATE_URL="views/create.ptt";var MODULE_DEPENDANCIES=["cjt2.directives.validationContainer","cjt2.directives.validationItem","cjt2.directives.toggleSwitch","cjt2.directives.search","cjt2.directives.indeterminateState",CopyFieldDirective.namespace];var CONTROLLER_INJECTABLES=["$scope","$location","alertService",APITokensService.serviceName,"componentSettingSaverService","CAN_CREATE_LIMITED","apiTokens","features"];var CONTROLLER_NAME="CreateTokenController";var CONTROLLER=function APITokensListController($scope,$location,$alertService,$service,$CSSS,CAN_CREATE_LIMITED,apiTokens,features){$scope.canCreateLimited=CAN_CREATE_LIMITED;$scope.pageTitle=VIEW_TITLE;$scope.RTL=LOCALE.is_rtl();$scope.showAllHelp=false;$scope.selectedFeatures=[];$scope.ui={stayAfterCopy:false};$scope.checkAll={all:false};$scope.features=features;$scope.apiTokens=apiTokens;$scope.working={};$scope.init=function init(){$CSSS.register(CSSS_COMPONENT_NAME).then(function CSSSLoaded(data){if(data){$scope.showAllHelp=data.showAllHelp;$scope.ui.stayAfterCopy=data.stayAfterCopy}});$scope.reset()};$scope.reset=function reset(form){$scope.working={name:"",unrestricted:CAN_CREATE_LIMITED?false:true,features:{}};$scope.generatedToken=null;$scope.pageTitle=VIEW_TITLE;$scope.selectedFeatures=[];if(form){form.$setPristine()}};$scope._updateCSSS=function _updateCSSS(){$CSSS.set(CSSS_COMPONENT_NAME,{showAllHelp:$scope.showAllHelp,stayAfterCopy:$scope.ui.stayAfterCopy})};$scope.toggleHelp=function toggleHelp(){$scope.showAllHelp=!$scope.showAllHelp;$scope._updateCSSS()};$scope._tokenCreated=function _tokenCreated(newToken){$scope.generatedToken=newToken;$scope.pageTitle=LOCALE.maketext("Token Created Successfully");$scope.apiTokens=$service.getTokens();var message;if($scope.working.unrestricted){message=LOCALE.maketext("You successfully created an [output,strong,unrestricted] [asis,API] token “[_1]”.",$scope.working.name)}else{message=LOCALE.maketext("You successfully created a [output,strong,limited-access] [asis,API] token “[_1]”.",$scope.working.name)}$alertService.success(message);return newToken};$scope.create=function create(workingToken){return $service.createToken(workingToken.name,workingToken.unrestricted,$scope.selectedFeatures).then($scope._tokenCreated)};$scope.toggleSelectAllFeatures=function toggleSelectAllFeatures(){if($scope.selectedFeatures.length<$scope.features.length){$scope.features.forEach(function selectAll(feature){$scope.working.features[feature.id]=true})}else{$scope.features.forEach(function selectAll(feature){$scope.working.features[feature.id]=false})}$scope.updateSelectedFeatures()};$scope.getFeaturesIndeterminateState=function getFeaturesIndeterminateState(){return $scope.selectedFeatures.length&&$scope.features.length&&$scope.features.length!==$scope.selectedFeatures.length};$scope.updateSelectedFeatures=function updateSelectedFeatures(){$scope.selectedFeatures=[];angular.forEach($scope.working.features,function(featureSelected,featureKey){if(featureSelected){$scope.selectedFeatures.push(featureKey)}})};$scope.backToListView=function backToListView(){$location.path("/")};$scope.tokenCopied=function tokenCopied(form){if($scope.ui.stayAfterCopy){$scope.reset(form)}else{$scope.backToListView()}};$scope.stayAfterCopyChanged=function stayAfterCopyChanged(){$scope._updateCSSS()};$scope.$on("$destroy",$CSSS.unregister.bind($CSSS,CSSS_COMPONENT_NAME));$scope.init()};var app=angular.module(MODULE_NAMESPACE,MODULE_DEPENDANCIES);app.controller(CONTROLLER_NAME,CONTROLLER_INJECTABLES.concat(CONTROLLER));var resolver={apiTokens:[APITokensService.serviceName,function($service){return $service.fetchTokens()}],features:[APITokensService.serviceName,function($service){return $service.getFeatures()}]};return{id:"createAPIToken",route:"/create",controller:CONTROLLER_NAME,"class":CONTROLLER,templateUrl:TEMPLATE_URL,title:VIEW_TITLE,namespace:MODULE_NAMESPACE,showResourcePanel:true,resolve:resolver}});