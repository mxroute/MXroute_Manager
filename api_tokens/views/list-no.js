//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/paper_lantern/api_tokens/views/list.js
// Generated: /usr/local/cpanel/base/frontend/paper_lantern/api_tokens/views/list-no.js
// Module:    /paper_lantern/api_tokens/views/list-no
// Locale:    no
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Are you sure that you want to revoke the following [asis,API] [numerate,_1,token,tokens]: [list_and_quoted,_2]":"Are you sure that you want to revoke the following [asis,API] [numerate,_1,token,tokens]: [list_and_quoted,_2]","Created":"Created","List API Tokens":"List API Tokens","Revoke Selected [asis,API] [numerate,_1,Token,Tokens]":"Revoke Selected [asis,API] [numerate,_1,Token,Tokens]","The system successfully revoked the following [asis,API] [numerate,_1,token,tokens]: [list_and_quoted,_1]":"The system successfully revoked the following [asis,API] [numerate,_1,token,tokens]: [list_and_quoted,_1]","Token Name":"Token Name"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
