//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/paper_lantern/js2/zoneedit/advanced.js
// Generated: /usr/local/cpanel/base/frontend/paper_lantern/js2/zoneedit/advanced-no.js
// Module:    /paper_lantern/js2/zoneedit/advanced-no
// Locale:    no
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"A zone name [output,em,must] be a domain name, and can include a period at the end.":"A zone name [output,em,must] be a domain name, and can include a period at the end.","AJAX Error":"AJAX Error","Actions":"Actions","Adding record …":"Adding record …","Address":"Address","All CNAMEs must be unique.":"All CNAMEs must be unique.","Are you certain that you want to delete this record?":"Are you certain that you want to delete this record?","Cancel":"Cancel","Delete":"Delete","Edit":"Edit","Edit Record":"Edit Record","Error":"Error","JSON parse failed.":"JSON parse failed.","Loading …":"Loading …","Must be integer between 0 and 65535.":"Must be integer between 0 and 65535.","Name":"Name","Name matches an existing CNAME.":"Name matches an existing CNAME.","Please refresh the page and try again.":"Please refresh the page and try again.","Port":"Port","Port:":"Port:","Priority":"Priority","Priority:":"Priority:","Record":"Record","TXT Data":"TXT Data","Target":"Target","Target must be “.” or a valid zone name.":"Target must be “.” or a valid zone name.","Target:":"Target:","The [asis,CNAME] value must be a valid zone name.":"The [asis,CNAME] value must be a valid zone name.","The [output,acronym,TTL,Time To Live] value [output,em,must] be a positive integer.":"The [output,acronym,TTL,Time To Live] value [output,em,must] be a positive integer.","The address [output,em,cannot] be a local IP addres (for example, [output,class,127.0.0.1,code]).":"The address [output,em,cannot] be a local IP addres (for example, [output,class,127.0.0.1,code]).","The address [output,em,must] be an IP address.":"The address [output,em,must] be an IP address.","The system did not find any zone records.":"The system did not find any zone records.","The system experienced an unknown error.":"The system experienced an unknown error.","The system is deleting the record …":"The system is deleting the record …","The system is editing the record …":"The system is editing the record …","The system successfully added the record.":"The system successfully added the record.","The system successfully changed the content.":"The system successfully changed the content.","The system successfully updated the record.":"The system successfully updated the record.","The system will now restore your defaults …":"The system will now restore your defaults …","This must be an [output,abbr,IPv6,Internet Protocol Version 6] address.":"This must be an [output,abbr,IPv6,Internet Protocol Version 6] address.","Type":"Type","Weight":"Weight","Weight:":"Weight:","You must make changes to your settings before you click [output,em,Edit].":"You must make changes to your settings before you click [output,em,Edit].","Zone File Reset":"Zone File Reset","[asis,TXT] data [output,em,cannot] be empty.":"[asis,TXT] data [output,em,cannot] be empty.","[output,abbr,IPv6,Internet Protocol Version 6] Address":"[output,abbr,IPv6,Internet Protocol Version 6] Address"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
