//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/paper_lantern/js2/mail/filters/editfilter.js
// Generated: /usr/local/cpanel/base/frontend/paper_lantern/js2/mail/filters/editfilter-i_en.js
// Module:    /paper_lantern/js2/mail/filters/editfilter-i_en
// Locale:    i_en
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Browse":"Browse","Cancel":"Cancel","Filter Name":"Filter Name","Saving filter “[output,class,_1,code]” …":"Saving filter “[output,class,_1,code]” …","Success! The filters list is reloading now.":"Success! The filters list is reloading now.","The filter name cannot be empty.":"The filter name cannot be empty.","The filter name cannot contain “[output,class,_1,code]” or “[output,class,_2,code]”.":"The filter name cannot contain “[output,class,_1,code]” or “[output,class,_2,code]”.","You have successfully created a new filter. You can create another one now, or you can [output,url,_1,return to the filters list].":"You have successfully created a new filter. You can create another one now, or you can [output,url,_1,return to the filters list]."};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
