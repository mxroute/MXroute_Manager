//~~GENERATED~~
//-------------------------------------------------------------
// Source:    /usr/local/cpanel/base/frontend/paper_lantern/multiphp_ini_editor/views/basicMode.js
// Generated: /usr/local/cpanel/base/frontend/paper_lantern/multiphp_ini_editor/views/basicMode-zh.js
// Module:    /paper_lantern/multiphp_ini_editor/views/basicMode-zh
// Locale:    zh
// This file is generated by the cpanel localization system
// using the bin/_build_translated_js_hash_files.pl script.
//-------------------------------------------------------------
// !!! Do not hand edit this file !!!
//-------------------------------------------------------------
(function() {
    // The raw lexicon.
    var newLex = {"Apply":"应用","Disabled":"已禁用","Enabled":"已启用","Errors occurred while retrieving the [asis,PHP INI] locations.":"检索 [asis,PHP INI] 位置时出现错误。","Successfully applied the settings.":"已成功应用设置。","You must click “[_1]” to apply the new changes.":"必须单击“[_1]”以应用新更改。","You must provide a valid float value.":"You must provide a valid float value.","You must provide either an integer value, a [output,url,_1,shorthand byte,target,blank,title,shorthand byte documentation], or a [output,url,_2,predefined constant,target,blank,title,predefined constant documentation].":"You must provide either an integer value, a [output,url,_1,shorthand byte,target,blank,title,shorthand byte documentation], or a [output,url,_2,predefined constant,target,blank,title,predefined constant documentation].","[asis,PHP] Default: [output,class,_1,defaultValue]":"[asis,PHP] 默认: [output,class,_1,defaultValue]","[comment,used for highlight in select option]-- Not Available --[comment,used for highlight in select option]":"[comment,used for highlight in select option]-- 不可用 --[comment,used for highlight in select option]","[comment,used for highlight in select option]-- Select a location --[comment,used for highlight in select option]":"[comment,used for highlight in select option]-- 选择位置 --[comment,used for highlight in select option]"};

    if (!this.LEXICON) {
        this.LEXICON = {};
    }

    for(var item in newLex) {
        if(newLex.hasOwnProperty(item)) {
            var value = newLex[item];
            if (typeof(value) === "string" && value !== "") {
                // Only add it if there is a value.
                this.LEXICON[item] = value;
            }
        }
    }
})();
//~~END-GENERATED~~
