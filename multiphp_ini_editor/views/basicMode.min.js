define(["angular","lodash","cjt/util/locale","uiBootstrap","cjt/directives/alertList","cjt/directives/spinnerDirective","cjt/decorators/growlDecorator","cjt/services/alertService","app/services/configService","cjt/directives/actionButtonDirective"],function(angular,_,LOCALE){var app=angular.module("App");var controller=app.controller("basicMode",["$scope","$location","configService","$routeParams","$timeout","spinnerAPI","alertService","growl","growlMessages",function($scope,$location,configService,$routeParams,$timeout,spinnerAPI,alertService,growl,growlMessages){var iniUserPaths=[];var alreadyInformed=false;var infoGrowlHandle;$scope.noIniPaths=true;$scope.txtInFirstOption=LOCALE.maketext("[comment,used for highlight in select option]-- Not Available --[comment,used for highlight in select option]");$scope.selectedIniPath={type:"",name:""};$scope.iniPathNames=[];$scope.loadingDirectiveList=false;$scope.showEmptyMessage=false;$scope.knobLabel=" ";var resetForm=function(){$scope.directiveList=[];$scope.showEmptyMessage=false};$scope.loadDirectives=function(){growlMessages.destroyAllMessages();if($scope.selectedIniPath.type){spinnerAPI.start("loadingSpinner");var selectedIni=$scope.selectedIniPath;$scope.loadingDirectiveList=true;alreadyInformed=false;var pathInfo=getIniPathInfo($scope.selectedIniPath);if(pathInfo.type==="home"){pathInfo.inifullpath=pathInfo.homedir+"/"+pathInfo.path}else if(pathInfo.type==="vhost"){pathInfo.inifullpath=pathInfo.documentroot+"/"+pathInfo.path}$scope.currentIniPathInfo=pathInfo;return configService.fetchBasicList(selectedIni.type,selectedIni.name).then(function(data){if(typeof data.directives!=="undefined"&&data.directives.length>0){var directiveData=data.directives;return configService.getHandlerForDomain(selectedIni.type,selectedIni.name).then(function(data){if(data.php_handler!=="suphp"){directiveData=_.filter(directiveData,function(dir){return dir.php_ini_mode!=="PHP_INI_SYSTEM"})}$scope.directiveList=directiveData.map(function(item){item.toggleValue=item.value==="On"?true:false;var defaultPhpValue=item.default_value;if(typeof item.cpanel_default!=="undefined"&&item.cpanel_default!==null){defaultPhpValue=item.cpanel_default}if(item.type==="boolean"){defaultPhpValue=item.default_value==="1"?LOCALE.maketext("Enabled"):LOCALE.maketext("Disabled")}item.default_text=LOCALE.maketext("[asis,PHP] Default: [output,class,_1,defaultValue]",defaultPhpValue);return item})},function(error){growl.error(error)})}},function(error){growl.error(error)}).then(function(){$scope.loadingDirectiveList=false;spinnerAPI.stop("loadingSpinner")}).finally(function(){spinnerAPI.stop("loadingSpinner");$scope.showEmptyMessage=$scope.selectedIniPath!==""&&$scope.directiveList.length<=0})}else{resetForm()}};var informUser=function(){if(!alreadyInformed){alreadyInformed=true;growl.info(LOCALE.maketext("You must click “[_1]” to apply the new changes.",LOCALE.maketext("Apply")),{ttl:-1,onopen:function(){infoGrowlHandle=this}})}};$scope.toggle_status=function(directive){if(directive.value==="On"){directive.value="Off";directive.toggleValue=false}else{directive.value="On";directive.toggleValue=true}informUser()};$scope.directiveTextChange=function(directive){informUser();var type=directive.type;var text=directive.value||"";var valid=true;var valMsg="";if(type==="integer"){var E_FLAG="[~!]?\\s*E_(?:(?:(?:CORE_|COMPILE_|USER_)?(?:ERROR|WARNING))|(?:USER_)?(?:NOTICE|DEPRECATED)|PARSE|STRICT|RECOVERABLE_ERROR|ALL)";var E_OPER="[&|^]";var intRegex=new RegExp("^\\s*"+E_FLAG+"(?:\\s*"+E_OPER+"\\s*"+E_FLAG+")*$");if(/^-?\d+[kmg]?$/i.test(text)||intRegex.test(text)){valid=true}else{valid=false;valMsg=LOCALE.maketext("You must provide either an integer value, a [output,url,_1,shorthand byte,target,blank,title,shorthand byte documentation], or a [output,url,_2,predefined constant,target,blank,title,predefined constant documentation].","http://php.net/manual/en/faq.using.php#faq.using.shorthandbytes","http://php.net/manual/en/errorfunc.constants.php")}}else if(type==="float"){if(/^-?\d+(?:\.\d*)?$/.test(text)){valid=true}else{valid=false;valMsg=LOCALE.maketext("You must provide a valid float value.")}}$scope.basicModeForm["txt"+directive.key].$setValidity("pattern",valid);directive.validationMsg=valMsg};$scope.disableApply=function(){return $scope.noIniPaths||!$scope.selectedIniPath.type||!$scope.basicModeForm.$valid};$scope.requiredValidation=function(directive){return directive.type!=="string"&&directive.type!=="boolean"};$scope.applyPhpSettings=function(){if($scope.basicModeForm.$valid){growlMessages.destroyAllMessages();alreadyInformed=false;if(typeof infoGrowlHandle!=="undefined"){infoGrowlHandle.destroy()}return configService.applySettings($scope.selectedIniPath.type,$scope.selectedIniPath.name,$scope.directiveList).then(function(data){if(data!==undefined){growl.success(LOCALE.maketext("Successfully applied the settings."))}},function(error){growl.error(_.unescape(error))})}};var getIniPathInfo=function(shortPathInfo){var pathInfo=_.find(iniUserPaths,function(path){if(shortPathInfo.type==="home"&&path.type==="home"){return true}else if(shortPathInfo.type==="vhost"&&shortPathInfo.name===path.vhost){return true}});return pathInfo};var setIniPathDropdown=function(iniList){if(iniList.length>0){iniUserPaths=iniList;var mainDomainName;_.each(iniList,function(iniPath){if(iniPath.type!=="home"&&!iniPath.main_domain){$scope.iniPathNames.push({type:iniPath.type,name:iniPath.vhost})}else if(iniPath.main_domain){mainDomainName=iniPath.vhost}});$scope.iniPathNames=_.sortBy($scope.iniPathNames,"name");$scope.iniPathNames.unshift({type:"vhost",name:mainDomainName});$scope.iniPathNames.unshift({type:"home",name:"Home Directory"})}if($scope.iniPathNames.length>0){$scope.noIniPaths=false;$scope.txtInFirstOption=LOCALE.maketext("[comment,used for highlight in select option]-- Select a location --[comment,used for highlight in select option]")}};$scope.$on("$viewContentLoaded",function(){growlMessages.destroyAllMessages();var phpIniData=PAGE.php_ini_data;$scope.localeIsRTL=PAGE.locale_is_RTL?true:false;if(!phpIniData.status&&phpIniData.errors.length>0){var errors=phpIniData.errors;errors.forEach(function(error){alertService.add({type:"danger",message:error,id:"alertMessages",replace:false,closeable:true})});growl.error(LOCALE.maketext("Errors occurred while retrieving the [asis,PHP INI] locations."))}else{setIniPathDropdown(phpIniData.data.paths)}})}]);return controller});