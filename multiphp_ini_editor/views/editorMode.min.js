define(["angular","lodash","cjt/util/locale","jquery","ace","uiBootstrap","cjt/directives/alertList","cjt/services/alertService","cjt/decorators/growlDecorator","app/services/configService"],function(angular,_,LOCALE,$){var app=angular.module("App");var controller=app.controller("editorMode",["$scope","$location","$routeParams","$timeout","spinnerAPI","alertService","growl","growlMessages","configService",function($scope,$location,$routeParams,$timeout,spinnerAPI,alertService,growl,growlMessages,configService){var iniUserPaths=[];var alreadyInformed=false;var infoGrowlHandle;$scope.noIniPaths=true;$scope.txtInFirstOption=LOCALE.maketext("[comment,used for highlight in select option]-- Not Available --[comment,used for highlight in select option]");$scope.selectedIniPath={type:"",name:""};$scope.iniPathNames=[];$scope.processingEditor=false;var editor;$scope.loadContent=function(){growlMessages.destroyAllMessages();if($scope.selectedIniPath.type){spinnerAPI.start("loadingSpinner");var selectedIni=$scope.selectedIniPath;editorInProcess(true);alreadyInformed=false;var pathInfo=getIniPathInfo($scope.selectedIniPath);if(pathInfo.type==="home"){pathInfo.inifullpath=pathInfo.homedir+"/"+pathInfo.path}else if(pathInfo.type==="vhost"){pathInfo.inifullpath=pathInfo.documentroot+"/"+pathInfo.path}$scope.currentIniPathInfo=pathInfo;return configService.fetchContent(selectedIni.type,selectedIni.name).then(function(content){if(content!=="undefined"){if(content===""){growl.info(LOCALE.maketext("The [asis,INI] content does not exist. You may add new content."))}var htmlContent=$("<div/>").html(content).text();if(typeof editor==="undefined"){editor=ace.edit("editor");editor.$blockScrolling=Infinity;editor.setShowPrintMargin(false)}editor.focus();editor.scrollToRow(0);editor.setTheme("ace/theme/chrome");var editSession=ace.createEditSession(htmlContent);editor.setSession(editSession);if(typeof editSession!=="undefined"){editSession.setMode("ace/mode/ini");editor.on("change",$scope.informUser)}}},function(error){growl.error(error)}).then(function(){editorInProcess(false)}).finally(function(){spinnerAPI.stop("loadingSpinner")})}};$scope.informUser=function(){if(!alreadyInformed){alreadyInformed=true;growl.info(LOCALE.maketext("You must click “[_1]” to apply the new changes.",LOCALE.maketext("Save")),{ttl:-1,onopen:function(){infoGrowlHandle=this}})}};$scope.save=function(){growlMessages.destroyAllMessages();alreadyInformed=false;if(typeof infoGrowlHandle!=="undefined"){infoGrowlHandle.destroy()}editorInProcess(true);var changedContent=_.escape(editor.getSession().getValue());return configService.saveIniContent(changedContent,$scope.selectedIniPath.type,$scope.selectedIniPath.name).then(function(data){if(typeof data!=="undefined"){growl.success(LOCALE.maketext("Successfully saved the changes."))}},function(error){growl.error(_.escape(error))}).then(function(){editorInProcess(false)})};var editorInProcess=function(processing){if(typeof editor!=="undefined"){editor.setReadOnly(processing)}$scope.processingEditor=processing};var getIniPathInfo=function(shortPathInfo){var pathInfo=_.find(iniUserPaths,function(path){if(shortPathInfo.type==="home"&&path.type==="home"){return true}else if(shortPathInfo.type==="vhost"&&shortPathInfo.name===path.vhost){return true}});return pathInfo};var setIniPathDropdown=function(iniList){if(iniList.length>0){iniUserPaths=iniList;var mainDomainName;_.each(iniList,function(iniPath){if(iniPath.type!=="home"&&!iniPath.main_domain){$scope.iniPathNames.push({type:iniPath.type,name:iniPath.vhost})}else if(iniPath.main_domain){mainDomainName=iniPath.vhost}});$scope.iniPathNames=_.sortBy($scope.iniPathNames,"name");$scope.iniPathNames.unshift({type:"vhost",name:mainDomainName});$scope.iniPathNames.unshift({type:"home",name:"Home Directory"})}if($scope.iniPathNames.length>0){$scope.noIniPaths=false;$scope.txtInFirstOption=LOCALE.maketext("[comment,used for highlight in select option]-- Select a location --[comment,used for highlight in select option]")}};$scope.$on("$viewContentLoaded",function(){growlMessages.destroyAllMessages();var phpIniData=PAGE.php_ini_data;if(!phpIniData.status&&phpIniData.errors.length>0){var errors=phpIniData.errors;errors.forEach(function(error){alertService.add({type:"danger",message:error,id:"alertMessages",replace:false,closeable:true})});growl.error(LOCALE.maketext("Errors occurred while retrieving the [asis,PHP INI] locations."))}setIniPathDropdown(phpIniData.data.paths)})}]);return controller});